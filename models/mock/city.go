// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/shyam81992/Weather-Monster/models (interfaces: CityCtlInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockCityCtlInterface is a mock of CityCtlInterface interface.
type MockCityCtlInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCityCtlInterfaceMockRecorder
}

// MockCityCtlInterfaceMockRecorder is the mock recorder for MockCityCtlInterface.
type MockCityCtlInterfaceMockRecorder struct {
	mock *MockCityCtlInterface
}

// NewMockCityCtlInterface creates a new mock instance.
func NewMockCityCtlInterface(ctrl *gomock.Controller) *MockCityCtlInterface {
	mock := &MockCityCtlInterface{ctrl: ctrl}
	mock.recorder = &MockCityCtlInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCityCtlInterface) EXPECT() *MockCityCtlInterfaceMockRecorder {
	return m.recorder
}

// CreateCity mocks base method.
func (m *MockCityCtlInterface) CreateCity(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateCity", arg0)
}

// CreateCity indicates an expected call of CreateCity.
func (mr *MockCityCtlInterfaceMockRecorder) CreateCity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCity", reflect.TypeOf((*MockCityCtlInterface)(nil).CreateCity), arg0)
}

// CreateCityDeleteTable mocks base method.
func (m *MockCityCtlInterface) CreateCityDeleteTable() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateCityDeleteTable")
}

// CreateCityDeleteTable indicates an expected call of CreateCityDeleteTable.
func (mr *MockCityCtlInterfaceMockRecorder) CreateCityDeleteTable() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCityDeleteTable", reflect.TypeOf((*MockCityCtlInterface)(nil).CreateCityDeleteTable))
}

// CreateCityDeleteTrigger mocks base method.
func (m *MockCityCtlInterface) CreateCityDeleteTrigger() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateCityDeleteTrigger")
}

// CreateCityDeleteTrigger indicates an expected call of CreateCityDeleteTrigger.
func (mr *MockCityCtlInterfaceMockRecorder) CreateCityDeleteTrigger() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCityDeleteTrigger", reflect.TypeOf((*MockCityCtlInterface)(nil).CreateCityDeleteTrigger))
}

// CreateCityTable mocks base method.
func (m *MockCityCtlInterface) CreateCityTable() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateCityTable")
}

// CreateCityTable indicates an expected call of CreateCityTable.
func (mr *MockCityCtlInterfaceMockRecorder) CreateCityTable() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCityTable", reflect.TypeOf((*MockCityCtlInterface)(nil).CreateCityTable))
}

// DeleteCity mocks base method.
func (m *MockCityCtlInterface) DeleteCity(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteCity", arg0)
}

// DeleteCity indicates an expected call of DeleteCity.
func (mr *MockCityCtlInterfaceMockRecorder) DeleteCity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCity", reflect.TypeOf((*MockCityCtlInterface)(nil).DeleteCity), arg0)
}

// UpdateCity mocks base method.
func (m *MockCityCtlInterface) UpdateCity(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateCity", arg0)
}

// UpdateCity indicates an expected call of UpdateCity.
func (mr *MockCityCtlInterfaceMockRecorder) UpdateCity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCity", reflect.TypeOf((*MockCityCtlInterface)(nil).UpdateCity), arg0)
}
